/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ansexp;

import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author eremeykin
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        try {
            SQLiteJDBC.getInstance().setSourceFile(new File("/home/eremeykin/Курсовой /Код/AnsExp/src/database/mainDB.sqlite"));
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Произошла ошибка БД."
                    + "Файл не может быть открыт");
            JOptionPane.showMessageDialog(this, ex);
        }
        try {
            XMLParser parser = XMLParser.getInstance(new File("/home/eremeykin/Курсовой /Код/AnsExp/src/XML/model2.xml"));
            outline1 = new OutlineCreator(parser.getResultNode()).getOutline();
            jScrollPane1.setViewportView(outline1);
            ArrayList<DefaultCellEditor> AL = new ArrayList<>();
            Node.getEditors(AL, parser.getResultNode());
        } catch (XMLParser.XMLParsingException exc) {
            JOptionPane.showMessageDialog(this, "Произошла ошибка при чтении XML файла."
                    + "Файл не может быть открыт");
            JOptionPane.showMessageDialog(this, exc);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Произошла ошибка работе с БД.");
            JOptionPane.showMessageDialog(this, ex);
        } catch (SQLiteJDBC.UndefinedDBFile ex) {
            JOptionPane.showMessageDialog(this, "База данных не определена.\n Выбирете БД вручную");
            JFileChooser fileChooser = new JFileChooser();
            int res = fileChooser.showDialog(jMenu1, "Открыть модель");
            if (res == JFileChooser.APPROVE_OPTION) {
                try {
                    SQLiteJDBC.getInstance().setSourceFile(fileChooser.getSelectedFile());
                } catch (ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(this, "Не удается открыть БД. Программа будет закрыта");
                    System.exit(-1);

                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        outline1 = new org.netbeans.swing.outline.Outline();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(outline1);

        jMenu1.setText("File");

        jMenuItem1.setText("Выбрать файл");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("Test");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String debug = Node.printChildren((Node) outline1.getOutlineModel().getRoot(), 0);
        System.out.println(debug);
        JFileChooser fileChooser = new JFileChooser();
        int res = fileChooser.showDialog(jMenu1, "Открыть модель");
        if (res == JFileChooser.APPROVE_OPTION) {
            try {
                XMLParser parser = XMLParser.getInstance(fileChooser.getSelectedFile());
                outline1 = new OutlineCreator(parser.getResultNode()).getOutline();
                jScrollPane1.setViewportView(outline1);
            } catch (XMLParser.XMLParsingException exc) {
                JOptionPane.showMessageDialog(this, "Произошла ошибка при чтении XML файла."
                        + "Файл не может быть открыт");
                JOptionPane.showMessageDialog(this, exc);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Произошла ошибка работе с БД.");
                JOptionPane.showMessageDialog(this, ex);
            } catch (SQLiteJDBC.UndefinedDBFile ex) {
                JOptionPane.showMessageDialog(this, "База данных не определена.\n Выбирете БД вручную");
                JFileChooser fileChooser2 = new JFileChooser();
                int res2 = fileChooser2.showDialog(jMenu1, "Открыть модель");
                if (res2 == JFileChooser.APPROVE_OPTION) {
                    try {
                        SQLiteJDBC.getInstance().setSourceFile(fileChooser.getSelectedFile());
                    } catch (ClassNotFoundException | SQLException e) {
                        JOptionPane.showMessageDialog(this, "Не удается открыть БД. Программа будет закрыта");
                        System.exit(-1);

                    }
                }
            }
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Node root = (Node) outline1.getOutlineModel().getRoot();
        System.out.println(Node.printChildren(root, 0));
        try {
            SQLiteJDBC.getInstance().test();
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.swing.outline.Outline outline1;
    // End of variables declaration//GEN-END:variables
}
